<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>biyixia</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-06-15T09:59:12.631Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>biyixia</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ajax</title>
    <link href="http://example.com/post/ajax/"/>
    <id>http://example.com/post/ajax/</id>
    <published>2023-06-15T09:37:35.693Z</published>
    <updated>2023-06-15T09:59:12.631Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2&gt;&lt;span id=&quot;导入jqueryminjs&quot;&gt;导入jquery.min.js&lt;/span&gt;&lt;/h2&gt;
&lt;figure class=&quot;highlight jsp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span</summary>
        
      
    
    
    
    <category term="第三阶段" scheme="http://example.com/categories/%E7%AC%AC%E4%B8%89%E9%98%B6%E6%AE%B5/"/>
    
    
  </entry>
  
  <entry>
    <title>SSM</title>
    <link href="http://example.com/post/SSM/"/>
    <id>http://example.com/post/SSM/</id>
    <published>2023-06-15T09:16:32.595Z</published>
    <updated>2023-06-15T10:49:46.065Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2&gt;&lt;span id=&quot;环境搭建&quot;&gt;环境搭建&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span id=&quot;导入依赖&quot;&gt;导入依赖&lt;/span&gt;&lt;/h3&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td</summary>
        
      
    
    
    
    <category term="第三阶段" scheme="http://example.com/categories/%E7%AC%AC%E4%B8%89%E9%98%B6%E6%AE%B5/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/post/%E5%BC%82%E6%AD%A5%E4%B8%8E%E5%90%8C%E6%AD%A5/"/>
    <id>http://example.com/post/%E5%BC%82%E6%AD%A5%E4%B8%8E%E5%90%8C%E6%AD%A5/</id>
    <published>2023-06-15T06:20:27.742Z</published>
    <updated>2023-06-15T06:20:27.742Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>关于配置servlet的url-pattern的问题</title>
    <link href="http://example.com/post/servlet%20url-pattern%E7%9A%84%E5%8C%B9%E9%85%8D%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/post/servlet%20url-pattern%E7%9A%84%E5%8C%B9%E9%85%8D%E9%97%AE%E9%A2%98/</id>
    <published>2023-06-14T07:35:50.804Z</published>
    <updated>2023-06-15T00:31:07.037Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2&gt;&lt;span id=&quot;servlet-url-pattern的匹配问题&quot;&gt;servlet url-pattern的匹配问题&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;url-pattern 有三种匹配模式，分别是路径匹配、精确匹配、后缀匹配&lt;/p&gt;
&lt;h3&gt;&lt;span</summary>
        
      
    
    
    
    <category term="第三阶段" scheme="http://example.com/categories/%E7%AC%AC%E4%B8%89%E9%98%B6%E6%AE%B5/"/>
    
    
  </entry>
  
  <entry>
    <title>SpringMVC</title>
    <link href="http://example.com/post/SpringMVC/"/>
    <id>http://example.com/post/SpringMVC/</id>
    <published>2023-06-14T06:19:32.492Z</published>
    <updated>2023-06-15T10:26:23.896Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;springmvc&quot;&gt;SpringMVC&lt;/span&gt;&lt;/h1&gt;
&lt;h2&gt;&lt;span id=&quot;导入依赖&quot;&gt;导入依赖&lt;/span&gt;&lt;/h2&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>集合</title>
    <link href="http://example.com/post/%E9%9B%86%E5%90%88/"/>
    <id>http://example.com/post/%E9%9B%86%E5%90%88/</id>
    <published>2023-06-08T04:33:27.958Z</published>
    <updated>2023-01-28T07:36:24.209Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;
&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a</summary>
        
      
    
    
    
    <category term="第二阶段" scheme="http://example.com/categories/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5/"/>
    
    
  </entry>
  
  <entry>
    <title>运算符</title>
    <link href="http://example.com/post/%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <id>http://example.com/post/%E8%BF%90%E7%AE%97%E7%AC%A6/</id>
    <published>2023-06-08T04:33:27.957Z</published>
    <updated>2023-01-30T09:33:54.340Z</updated>
    
    
    <summary type="html">&lt;h1&gt;引言&lt;/h1&gt;</summary>
    
    
    
    <category term="第一阶段" scheme="http://example.com/categories/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/"/>
    
    
  </entry>
  
  <entry>
    <title>编码与数制</title>
    <link href="http://example.com/post/%E7%BC%96%E7%A0%81%E4%B8%8E%E6%95%B0%E5%88%B6/"/>
    <id>http://example.com/post/%E7%BC%96%E7%A0%81%E4%B8%8E%E6%95%B0%E5%88%B6/</id>
    <published>2023-06-08T04:33:27.956Z</published>
    <updated>2022-12-17T13:27:25.250Z</updated>
    
    
    <summary type="html">&lt;h1&gt;引言&lt;/h1&gt;
&lt;p&gt;1、2、3、4……，我们从小便学习这么计数，并使用到现在。但是这样的计数方式从何而来呢？又如何发展成如今计算机的计数方式？&lt;/p&gt;</summary>
    
    
    
    <category term="计算机组成与原理" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E4%B8%8E%E5%8E%9F%E7%90%86/"/>
    
    
  </entry>
  
  <entry>
    <title>继承</title>
    <link href="http://example.com/post/%E7%BB%A7%E6%89%BF/"/>
    <id>http://example.com/post/%E7%BB%A7%E6%89%BF/</id>
    <published>2023-06-08T04:33:27.955Z</published>
    <updated>2022-12-28T12:32:17.258Z</updated>
    
    
    <summary type="html">&lt;p&gt;is a”代表的是类之间的继承关系，比如PC机是计算机，工作站也是计算机。PC机和工作站是两种不同类型的计算机，但都继承了计算机的共同特性。因此在用 Java语言实现时，应该将PC机和工作站定义成两种类，均继承计算机类。&lt;/p&gt;
&lt;p&gt;“has a”代表的是对象和它的成员的从属关系。同一种类的对象，通过它们的属性的不同值来区别。比如一台PC机的操作系统是Windows，另一台PC机的操作系统是Linux。操作系统是PC机的一个成员变量，根据这一成员变量的不同值，可以区分不同的PC机对象。&lt;/p&gt;
&lt;p&gt;is a 是如果A是B，那么B就是A的基类。比如：等边三角形是使是三角形，那么，三角形就是等边三角形的基类。&lt;br&gt;
has a 是如果A中有B，那么，B就是A的组成部分&lt;/p&gt;
&lt;p&gt;如果你确定两件对象之间是is-a的关系，那么此时你应该使用继承；比如菱形、圆形和方形都是形状的一种，那么他们都应该从形状类继承而不是聚合。&lt;br&gt;
如果你确定两件对象之间是has-a的关系，那么此时你应该使用聚合；比如电脑是由显示器、CPU、硬盘等组成的，那么你应该把显示器、CPU、硬盘这些类聚合成电脑类，而不是从电脑类继承。&lt;/p&gt;</summary>
    
    
    
    <category term="第一阶段" scheme="http://example.com/categories/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/"/>
    
    
  </entry>
  
  <entry>
    <title>类加载的初始化顺序</title>
    <link href="http://example.com/post/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%BA%E5%BA%8F/"/>
    <id>http://example.com/post/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%BA%E5%BA%8F/</id>
    <published>2023-06-08T04:33:27.954Z</published>
    <updated>2023-01-09T13:22:23.916Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;静态代码块&quot;&gt;静态代码块&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;随着类的加载而运行，只执行一次&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当出现多个静态代码块(包括静态属性赋值）时，按顺序执行&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;String[] args&lt;/span&gt;)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(Order.i);		&lt;span class=&quot;comment&quot;&gt;//1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;构造代码块&quot;&gt;构造代码块&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;随着对象的创建而运行，且先于构造函数的执行&lt;/li&gt;
&lt;li&gt;有多个构造代码块时，也按顺序执行&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;构造器&quot;&gt;构造器&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;与类名同名的，通过new运算符来新建一个类的实例的函数。可以同时拥有多个不同参数类型顺序的构造器&lt;/li&gt;
&lt;li&gt;当未定义任何构造器时，编译器会默认提供一个无参的构造器&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="第一阶段" scheme="http://example.com/categories/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/post/%E7%BB%9F%E4%B8%80%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E4%B8%8E%E4%BF%A1%E6%81%AF%E8%BF%94%E5%9B%9E/"/>
    <id>http://example.com/post/%E7%BB%9F%E4%B8%80%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E4%B8%8E%E4%BF%A1%E6%81%AF%E8%BF%94%E5%9B%9E/</id>
    <published>2023-06-08T04:33:27.954Z</published>
    <updated>2023-05-31T10:51:03.399Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2&gt;&lt;span id=&quot;统一异常处理与信息返回&quot;&gt;统一异常处理与信息返回&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;pom.xml文件&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>流程控制</title>
    <link href="http://example.com/post/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
    <id>http://example.com/post/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/</id>
    <published>2023-06-08T04:33:27.953Z</published>
    <updated>2022-12-14T10:42:08.006Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span</summary>
        
      
    
    
    
    <category term="第一阶段" scheme="http://example.com/categories/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/"/>
    
    
  </entry>
  
  <entry>
    <title>校验注解</title>
    <link href="http://example.com/post/%E6%A0%A1%E9%AA%8C%E6%B3%A8%E8%A7%A3/"/>
    <id>http://example.com/post/%E6%A0%A1%E9%AA%8C%E6%B3%A8%E8%A7%A3/</id>
    <published>2023-06-08T04:33:27.952Z</published>
    <updated>2023-03-14T08:07:02.443Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2&gt;&lt;span id=&quot;导入依赖&quot;&gt;导入依赖&lt;/span&gt;&lt;/h2&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span</summary>
        
      
    
    
    
    <category term="第三阶段" scheme="http://example.com/categories/%E7%AC%AC%E4%B8%89%E9%98%B6%E6%AE%B5/"/>
    
    
  </entry>
  
  <entry>
    <title>树</title>
    <link href="http://example.com/post/%E6%A0%91/"/>
    <id>http://example.com/post/%E6%A0%91/</id>
    <published>2023-06-08T04:33:27.952Z</published>
    <updated>2023-01-28T11:47:44.944Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;二叉排序树&quot;&gt;二叉排序树&lt;/span&gt;&lt;/h1&gt;
&lt;h2&gt;&lt;span</summary>
        
      
    
    
    
    <category term="第二阶段" scheme="http://example.com/categories/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5/"/>
    
    
  </entry>
  
  <entry>
    <title>标识符</title>
    <link href="http://example.com/post/%E6%A0%87%E8%AF%86%E7%AC%A6/"/>
    <id>http://example.com/post/%E6%A0%87%E8%AF%86%E7%AC%A6/</id>
    <published>2023-06-08T04:33:27.951Z</published>
    <updated>2022-12-09T13:24:48.953Z</updated>
    
    
    <summary type="html">&lt;h1&gt;引言&lt;/h1&gt;
&lt;p&gt;标识符是指用来标识某个实体的一个符号，在不同的应用环境下有不同的含义。.在计算机 编程语言 中，标识符是用户编程时使用的名字，用于给变量、 常量 、 函数 、语句块等命名，以建立起名称与使用之间的关系。标识符通常由字母和数字以及其它字符构成。&lt;/p&gt;</summary>
    
    
    
    <category term="第一阶段" scheme="http://example.com/categories/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/"/>
    
    
  </entry>
  
  <entry>
    <title>日期类</title>
    <link href="http://example.com/post/%E6%97%A5%E6%9C%9F%E7%B1%BB/"/>
    <id>http://example.com/post/%E6%97%A5%E6%9C%9F%E7%B1%BB/</id>
    <published>2023-06-08T04:33:27.950Z</published>
    <updated>2023-02-03T03:00:13.474Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2&gt;&lt;span</summary>
        
      
    
    
    
    <category term="第二阶段" scheme="http://example.com/categories/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5/"/>
    
    
  </entry>
  
  <entry>
    <title>排序与查找</title>
    <link href="http://example.com/post/%E6%8E%92%E5%BA%8F%E4%B8%8E%E6%9F%A5%E6%89%BE/"/>
    <id>http://example.com/post/%E6%8E%92%E5%BA%8F%E4%B8%8E%E6%9F%A5%E6%89%BE/</id>
    <published>2023-06-08T04:33:27.949Z</published>
    <updated>2023-01-31T12:34:53.139Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;排序&quot;&gt;排序&lt;/span&gt;&lt;/h1&gt;
&lt;h2&gt;&lt;span</summary>
        
      
    
    
    
    <category term="第二阶段" scheme="http://example.com/categories/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5/"/>
    
    
  </entry>
  
  <entry>
    <title>数据库</title>
    <link href="http://example.com/post/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>http://example.com/post/%E6%95%B0%E6%8D%AE%E5%BA%93/</id>
    <published>2023-06-08T04:33:27.949Z</published>
    <updated>2023-02-11T13:31:43.684Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2&gt;&lt;span id=&quot;安装mysql&quot;&gt;安装MySql&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://s3.bmp.ovh/imgs/2023/02/06/e74255282ff5da9b.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img</summary>
        
      
    
    
    
    <category term="第二阶段" scheme="http://example.com/categories/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5/"/>
    
    
  </entry>
  
  <entry>
    <title>抽象类和接口</title>
    <link href="http://example.com/post/%E6%8A%BD%E8%B1%A1%E7%B1%BB%E5%92%8C%E6%8E%A5%E5%8F%A3/"/>
    <id>http://example.com/post/%E6%8A%BD%E8%B1%A1%E7%B1%BB%E5%92%8C%E6%8E%A5%E5%8F%A3/</id>
    <published>2023-06-08T04:33:27.948Z</published>
    <updated>2022-12-27T11:21:10.745Z</updated>
    
    
    <summary type="html">&lt;p&gt;在面向对象的概念中，所有的对象都是通过类来描绘的，但是反过来，并不是所有的类都是用来描绘对象的，如果一个类中没有包含足够的信息来描绘一个具体的对象时，这样的类往往被称为抽象类。&lt;/p&gt;
&lt;p&gt;抽象类是为了把&lt;strong&gt;相同的但不确定&lt;/strong&gt;的东西的提取出来，为了以后的重用。定义成抽象类的目的，就是为了在子类中实现抽象方法。&lt;/p&gt;
&lt;p&gt;当然，随着继承层次中一个个新子类的定义，类变得越来越具体，而父类则更一般，更通用。父类足够抽象时，以至于它没有具体的实例。&lt;/p&gt;
&lt;p&gt;然而，有时必须从几个类中抽象出共同的行为特征，继承它们所有的属性和方法。但是，Java不支持多重继承。这时，使用接口可以达到多重继承的效果。 例如：鼠标、键盘、打印机、扫描 仪、摄像头、充电器、MP3机、手机、数码相机、移动硬盘等都支持USB连接。&lt;/p&gt;
&lt;p&gt;接口就是规范，定义的是一组规则，体现了现实世界中“如果你是/要…则必须 能…”的思想。继承是一个&amp;quot;是不是&amp;quot;的关系，而接口实现则是 &amp;quot;能不能&amp;quot;的关系。&lt;/p&gt;</summary>
    
    
    
    <category term="第一阶段" scheme="http://example.com/categories/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/"/>
    
    
  </entry>
  
  <entry>
    <title>异常</title>
    <link href="http://example.com/post/%E5%BC%82%E5%B8%B8/"/>
    <id>http://example.com/post/%E5%BC%82%E5%B8%B8/</id>
    <published>2023-06-08T04:33:27.947Z</published>
    <updated>2023-01-28T13:17:58.296Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1&gt;&lt;span</summary>
        
      
    
    
    
    <category term="第二阶段" scheme="http://example.com/categories/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5/"/>
    
    
  </entry>
  
</feed>
